apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`master`) && (PathPrefix(`/`) || PathPrefix(`/api`))
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService


kubectl get ingressroute.traefik.io
------
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard
spec:
  entryPoints:
    - traefik
  routes:
    - match: Host(`192.168.233.128`) && (PathPrefix(`/`) || PathPrefix(`/api`))
      kind: Rule
      services:
        - name: traefik
          port: 8080

------

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-ingressroute
  # namespace: <your-namespace>
spec:
  entryPoints:
    web:
      address: "192.168.233.128:9000"
  routes:
    - match: Host(`192.168.233.128`) && PathPrefix(`/`)
      kind: Rule
      services:
        - name: traefik
          port: 9000
-------



------
kind: IngressRoute
metadata:
  name: promotheus
spec:
  entryPoints:
    - http-web
  routes:
    - match: Host(`192.168.233.128`)
      kind: Rule
      services:
        - name: prometheus-kube-prometheus-prometheus
          port: 9090


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whoami-ingress
spec:
  rules:
    - host: master
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: traefik-dashboard-service
              port:
                name: dashboard


---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: webui
spec:
  rules:
    - host: master
      http:
        paths:
          - path: /
            backend:
              serviceName: traefik-dashboard-service
              servicePort: 8080
          # - path: /api
          #   backend:
          #     serviceName: backend-svc
          #     servicePort: 8081